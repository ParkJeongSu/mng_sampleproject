plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.jspark'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // 1. Spring Data JPA: JpaRepository 구현체를 동적으로 생성해주는 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // 2. MS-SQL 드라이버: MSSQL DB와 통신하기 위한 JDBC 드라이버
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'

    // MapStruct 의존성
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Lombok과 함께 사용하기 위한 설정 (Lombok -> MapStruct 순으로 실행되도록 보장)
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // 3. domain 모듈 의존: domain에 정의된 Entity와 Repository 인터페이스를 알아야 하므로
    implementation project(':domain')
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

// =======================================================
// ▼▼▼▼▼▼▼▼▼▼ 이 부분을 추가하여 문제를 해결합니다 ▼▼▼▼▼▼▼▼▼▼
// =======================================================
// domain 모듈은 실행 가능한 애플리케이션이 아니므로 bootJar 태스크를 비활성화합니다.
bootJar {
    enabled = false
}

// 대신, 다른 모듈에서 의존성으로 사용할 수 있도록 표준 라이브러리 jar 태스크를 활성화합니다.
jar {
    enabled = true
}